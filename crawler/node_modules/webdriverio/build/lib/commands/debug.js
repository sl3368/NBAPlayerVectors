/**
 *
 * This command helps you to debug your integration tests. It stops the running queue and gives
 * you time to jump into the browser and check the state of your application (e.g. using the
 * dev tools). Once you are done go to the command line and press Enter.
 *
 * <example>
    :debug.js
    client
        .setValue('#input', 'FOO')
        .debug() // jumping into the browser and change value of #input to 'BAR'
        .getValue('#input').then(function(value) {
            console.log(value); // outputs: "BAR"
        })
        .end();
 * </example>
 *
 * @type utility
 *
 */

'use strict';

Object.defineProperty(exports, '__esModule', {
    value: true
});

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _readline = require('readline');

var _readline2 = _interopRequireDefault(_readline);

var debug = function debug() {
    var _this = this;

    var RL = _readline2['default'].createInterface({
        input: process.stdin,
        output: process.stdout
    });

    var logLevel = this.logger.logLevel;
    this.logger.logLevel = 'verbose';
    this.logger.debug();

    return new Promise(function (resolve) {
        RL.question('', function () {
            _this.logger.logLevel = logLevel;
            RL.close();
            resolve();
        });
    });
};

exports['default'] = debug;
module.exports = exports['default'];
