{"name":"Inferring NBA Player Vectors","tagline":"Probabilistic Matrix Factorization for Basketball Players","body":"###Introduction\r\nCompetition in the National Basketball Association (NBA) has intensified over the years and teams are exploring all options to gain an edge. As a result, the strategy of the sport (how to construct a team, which plays to run, what shots to take, etc.) has also evolved drastically. The use of technology to track players’ movements and actions on the court has generated rich data sets to leverage.\r\n#\r\nA team is not just the sum of its parts, there are many intricacies to the on court dynamics that can dictate a team’s success. Usually, a player’s individual statistics have been used to analyze their ability and predict performance with potential teammates. Yet this information may be limited in capturing features which may indicate how well players fit with each other. In this project I modified matrix factorization to model line up data, which only records how a cumulative group of players performed over the course of a season.\r\n\r\n###Data\r\nThe data set provided at `basketball-reference.com`, has line-ups of size 2 (dyadic), 3, 4, and 5 players for all teams in the NBA over the past 10+ years. For each data point, there exists a unique set of players,{a, b, c, d, e}, and a set of metrics which describe their performance when playing together: points, minutes played, shooting, etc. In order to collect all this data from the website, a crawler was written in JavaScript which can be run using Node.\r\n#\r\nThere are additional scripts for cleaning and pre-processing the data for model inference.\r\n\r\n###Inference\r\n\r\n##Stan\r\nFor inference, the model was implemented in the probabilistic programming language, [Stan](http://mc-stan.org/). Upon attempting to sample the posterior distribution using HMC, the inference algorithm failed. HMC struggles with matrix factorization due to there being multiple posterior modes. In order to overcome this issue the models were implemented in CmdStan and successful inference was accomplished using ADVI. \r\n\r\n###Results and Thoughts\r\n\r\nTo read more about the model, visit: \r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}